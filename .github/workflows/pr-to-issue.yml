name: PR to Issue

on:
  pull_request:
    types: [opened, closed]

permissions:
  contents: read
  issues: write

jobs:
  create-or-close-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get commit details
        id: get-commit
        run: |
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV
          echo "COMMIT_URL=$(git log -1 --pretty=format:'%H')" >> $GITHUB_ENV

      - name: Create issue
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            const commitUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${process.env.COMMIT_URL}`;
            const title = `Commit: ${process.env.COMMIT_MESSAGE}`;
            const body = `### Commit Details

**Commit Message:** ${process.env.COMMIT_MESSAGE}
**Author:** ${process.env.COMMIT_AUTHOR}
**URL:** [${commitUrl}](${commitUrl})

---

Describe the issue that this commit is addressing.`;
            
            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              assignees: ['Atik203'],
              labels: ['auto-generated']
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close related issue
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: actions/github-script@v7
        with:
          script: |
            const issueTitle = `Commit: ${process.env.COMMIT_MESSAGE}`;
            const issues = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'auto-generated'
            });
            const issue = issues.data.find(i => i.title === issueTitle);
            if (issue) {
              await github.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}